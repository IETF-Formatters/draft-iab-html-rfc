- var number = require('./number')
- var dt = require('./dt')
- var slug = require('slug')
- var pubDate = null
- var expiresDate = null
- var irefs={}

include lib.jade
  
mixin elem(e)
  - var pno = attributes ? attributes.pn : null
  - var a = $att(e, attributes)
  - a = $nsDecls(e, a)
  if pno 
    - a.pn = pno
  else if number.isPart(e)
    - a.pn = number.partNumber(e)

  #{$qname(e)}&attributes(a)
    +nodes(e.childNodes())
    block

mixin boilerplate(e)
  //- remove any old boilerplate
  +warn("Existing boilerplate being removed")

mixin front(e)
  +elem(e)
    if e.parent().name() == 'rfc'
      boilerplate
        - var isoPub = dt.isoDate(pubDate)
        - var tlp = number.ipr($('@ipr'))
        section(pn="s-boilerplate-1", numbered="false")
          name(slugifiedName="n-status-of-this-memo") Status of this Memo
          t(pn="p-boilerplate-1-1").
            This Internet-Draft is submitted in full conformance with
            the provisions of BCP 78 and BCP 79.#{tlp[0]||""}
          if defs.mode !== 'RFC'
            t(pn="p-boilerplate-1-2").
              Internet-Drafts are working documents of the Internet Engineering Task
              Force (IETF).  Note that other groups may also distribute working
              documents as Internet-Drafts.  The list of current Internet-Drafts is
              at <eref target='http://datatracker.ietf.org/drafts/current/'/>.
            t(pn="p-boilerplate-1-3").
              Internet-Drafts are draft documents valid for a maximum of six months
              and may be updated, replaced, or obsoleted by other documents at any
              time.  It is inappropriate to use Internet-Drafts as reference
              material or to cite them other than as "work in progress."
            t(pn="p-boilerplate-1-4") This Internet-Draft will expire on #{dt.isoDate(expiresDate)}.
        section(pn="s-boilerplate-2", numbered="false")
          name(slugifiedName="n-copyright-notice") Copyright Notice
          t(pn="p-boilerplate-2-1").
            Copyright &#xa9;#{pubDate.getFullYear()} IETF Trust and the
            persons identified as the document authors.  All rights reserved.
          t(pn="p-boilerplate-2-2").
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to <eref target='http://trustee.ietf.org/license-info'>IETF Documents</eref>
            in effect on the date of publication of this document.  Please review
            these documents carefully, as they describe your rights and restrictions
            with respect to this document.  Code Components extracted from this
            document must include Simplified BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Simplified BSD License.
          if tlp[1]
            t(pn="p-boilerplate-2-3")= tlp[1]

mixin abstract(e)
  if $('ancestor::reference', e)
    +elem(e)
  else
    +elem(e)(pn="s-abstract")

mixin artwork(e)
  - number.defaultAttr(e, 'align', 'left')
  - number.loadSrc(e)
  +elem(e)
  
mixin cref(e)
  - number.defaultAttr(e, 'display', 'true')
  +elem(e)

mixin date(e)
  //- in rfc/front/date, make sure we have a year, month, and day
  if $('ancestor::reference', e)
    +elem(e)
  else
    - var now = new Date()
    - now = new Date(now.getFullYear(), now.getMonth(), now.getDate())
    - var a = $att(e)
    - var year = a['year'] || now.getFullYear()
    - var month = a['month'] || dt.monthName(now)
    - var mn = dt.monthNumber(month)
    - var day = a['day'] || now.getDate();
    - pubDate = new Date(year, mn, day)
    if (pubDate < now) && (defs.mode !== 'RFC')
      +warn('Publication date before today: ' + pubDate)
    +elem(e)(year=year, month=month, day=day)

mixin displayreference(e)
  //- do not output displayreference
  
mixin dl(e)
  - number.defaultAttr(e, 'hanging', 'true')
  - number.defaultAttr(e, 'spacing', 'normal')
  +elem(e)

mixin figure(e)
  +elem(e)(pn="f-" + number.sequentialNumber(e))

mixin iref(e)
  - number.defaultAttr(e, 'primary', 'false')
  - var si = $att(e,'subitem')
  - var isi = 's-' + slug($att(e,'item')) + ((si==null)?"":("-"+slug(si)))
  - var num = irefs[isi] || 0
  - num += 1
  - irefs[isi] = num
  - e.attr('irefid',isi+'-'+num)
  +elem(e)

mixin name(e)
  - var sn = $att(e, 'slugifiedName')
  if sn
    +elem(e)
  else
    +elem(e)(slugifiedName="n-" + slug(e.text()).toLowerCase())

mixin note(e)
  if $att(e, 'removeInRFC') === 'true'
    if defs.mode === 'RFC'
      +error("Must remove removeInRFC note", e)
    - var t = $('t', e)
    - var txt = 'This note is to be removed before publishing as an RFC.'
    if !t || t.text().trim() !== txt
      //- <t>txt</t> needed.  Put it after the name if it exists, or as the
      //- first child of e.
      - var nm = $('name', e)
      if nm
        - nm.addNextSibling($element('t', txt))
      else
        - var first = $('*', e)
        if first
          - first.addPrevSibling($element('t', txt))
        else
          //- no children
          - e.addChild($element('t', txt))
      
  +elem(e)(pn="s-note-" + number.sequentialNumber(e))

mixin ol(e)
  - number.defaultAttr(e, 'spacing', 'normal')
  if !$att(e, 'start')
    - var group = $att(e, 'group')
    if group
      - var prev = $('preceding::ol[@group="' + group + '"][1]', e)
      if prev
        - var prevstart = parseInt($att(prev, 'start') || "1")
        - e.attr('start', prevstart + $('count(li)', prev))
      else
        - e.attr('start', '1')
    else
      - e.attr('start', '1')
  +elem(e)

mixin reference(e)
  - number.defaultAttr(e, 'quoteTitle', 'true')
  - var anchor = $att(e, 'anchor')
  - var dr = $('//displayreference[@target="' + anchor + '"]/@to')
  if dr
    - e.attr('anchor', dr)
  +elem(e)

mixin referencegroup(e)
  - var anchor = $att(e, 'anchor')
  - var dr = $('//displayreference[@target="' + anchor + '"]/@to')
  if dr
    - e.attr('anchor', dr)
  if $att($root(), 'sortRefs') !== 'true'
    +elem(e)
  else
    - var a = $att(e)
    - a = $nsDecls(e, a)
    referencegroup&attributes(a)
      - var rs = e.find('reference')
      - rs.sort(number.cmpAnchor)
      +nodes(rs)

mixin references(e)
  if $att($root(), 'sortRefs') !== 'true'
    +elem(e)
  else
    - var a = $att(e)
    - a = $nsDecls(e, a)
    - a.pn = number.partNumber(e)
    references&attributes(a)
      - var nm = $('name', e)
      if nm
        +elem(nm)
      - var rs = e.find('reference|referencegroup')
      - rs.sort(number.cmpAnchor)
      +nodes(rs)

mixin relref(e)
  //- target can be to either original reference anchor, or to the one
  //- modified by displayreference.
  - var target = $att(e, 'target')
  if !target
    +error("relref without target", e)
  - var target_el = $('//*[@anchor="' + target + '"]')
  - var dr = $('//displayreference[@target="' + target + '"]/@to')
  if dr
    - e.attr('target', dr)
    - target = dr
    - target_el = target_el || $('//*[@anchor="' + target + '"]')
  if !target_el
    +error("relref with non-existent target", e)
  - var nm = target_el.name()
  if (nm != 'reference') && (nm != 'referencegroup')
    +error("relref with invalid target", e)
  - var relative = $att(e, 'relative')
  - var section = $att(e, 'section')
  if (!relative && !section)
    +error('relref with neither section nor relative', e)
  if (relative && section)
    +error('relref with both section and relative', e)
  - var uri = $att(target_el, 'target')
  if !uri
    +error('relref reference(group) does not have target attribute', e)
  if relative
    - e.attr('derivedLink', uri + relative)
  if section
    - e.attr('derivedLink', uri + "#s-" + section)
  - var txt = e.text().trim()
  if txt
    - var dc = $att(e, 'derivedRemoteContent')
    if dc && (dc != txt)
      +warn('relref derivedRemoteContent invalid.  replacing', e)
    - e.attr('derivedRemoteContent', txt)
  +elem(e)

mixin section(e)
  if $att(e, 'numbered') === "false"
    - var pnm = e.parent().name()
    if  (pnm !== "middle") && (pnm !== "back") && (pnm !== "boilerplate")
      +error("Un-numbered section must be a child of middle or back", e)
    if e.get('following-sibling::section[not(@numbered="false")]')
      +error("Un-numbered section must not be followed by a numbered section", e)
    
  if $('ancestor::back', e)
    +elem(e)(pn="s-" + number.appendix(e))
  else
    +elem(e)(pn="s-" + number.section(e))

mixin sourcecode(e)
  - number.loadSrc(e)
  +elem(e)

mixin table(e)
  +elem(e)(pn="t-" + number.sequentialNumber(e))

mixin td(e)
  - number.defaultAttr(e, 'align', 'left')
  - number.defaultAttr(e, 'border', '0')
  +elem(e)

mixin th(e)
  - number.defaultAttr(e, 'align', 'left')
  - number.defaultAttr(e, 'border', '0')
  +elem(e)

mixin tr(e)
  - number.defaultAttr(e, 'border', '0')
  +elem(e)

mixin ul(e)
  - number.defaultAttr(e, 'empty', 'false')
  - number.defaultAttr(e, 'spacing', 'normal')
  +elem(e)

mixin workgroup(e)
  - var t = e.text().trim()
  if !t.match(/Group$/)
    +warn('Workgroup must end with "Group", current value: "'+ t + '"', e)
  +elem(e)

mixin xref(e)
  - var target = $att(e, 'target')
  if target == null
    +error("xref target required", e)

  - var target_el = $('//*[@anchor="' + target + '"]')
  - var dr = $('//displayreference[@target="' + target + '"]/@to')
  if dr
    - e.attr('target', dr)
    - target = dr
    - target_el = target_el || $('//*[@anchor="' + target + '"]')

  if target_el == null
    +error('unknown xref target: ' + target, e)
    
  - number.defaultAttr(e, 'format', 'default')
  if $att(e, 'section')
    - number.defaultAttr(e, 'sectionformat', 'of')
    
  //- invent text in the next pass
  +elem(e)

doctype xml
- var root = $root()
- number.defaultAttr(root, 'consensus', 'false')
- number.defaultAttr(root, 'indexInclude', 'true')
- number.defaultAttr(root, 'sortRefs', 'false')
- number.defaultAttr(root, 'submissionType', 'IETF')
- number.defaultAttr(root, 'symRefs', 'true')
- number.defaultAttr(root, 'tocInclude', 'true')
- root.attr('prepTime', dt.isoDateTime(new Date()))
- root.attr('version', '3')
- root.attr('scripts', number.scripts($root().toString()))
if $att(root, 'tocInclude') == 'true'
  - number.defaultAttr(root, 'tocDepth', '3');
  
- var now = new Date()
- now = new Date(now.getFullYear(), now.getMonth(), now.getDate())
- var dat = $('/rfc/front/date')
- var a = $att(dat) || {}
- var year = a['year'] || now.getFullYear()
- var month = a['month'] || dt.monthName(now)
- var mn = dt.monthNumber(month)
- var day = a['day'] || now.getDate();
- pubDate = new Date(year, mn, day)
- expiresDate = new Date(year, mn+6, day)
if defs.mode != 'RFC'
  if pubDate < now
    +warn('Publication date before today: ' + pubDate)
  - root.attr('expiresDate', dt.isoDate(expiresDate))
- number.sanity(root, "updates")
- number.sanity(root, "obsoletes")
  
+nodes($$('/*/preceding::node()'))
+elem(root)
+nodes($$('/*/following::node()'))
